Compilation warnings/errors on /home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:6:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;

^-------------------------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:6:1: Warning: Experimental features are turned on. Do not use experimental features on live deployments.
pragma experimental ABIEncoderV2;

^-------------------------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:91:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        LockUpRecord row = lockup[id];

        ^--------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:104:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord row = lockup[ids[id]];

            ^--------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:119:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord _record = lockup[i];

            ^------------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:128:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord _record = lockup[i];

            ^------------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:139:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord _record = lockup[i];

            ^------------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:150:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord row = lockup[ids[id]];

            ^--------------^
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol:161:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord row = lockup[ids[id]];

            ^--------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:91:9: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
        LockUpRecord row = lockup[id];

        ^--------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:104:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord row = lockup[ids[id]];

            ^--------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:119:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord _record = lockup[i];

            ^------------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:128:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord _record = lockup[i];

            ^------------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:139:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord _record = lockup[i];

            ^------------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:150:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord row = lockup[ids[id]];

            ^--------------^
0x18508ffDF874F5217C880769bBF83f4196089c4.sol:161:13: Warning: Variable is declared as a storage pointer. Use an explicit "storage" keyword to silence this warning.
            LockUpRecord row = lockup[ids[id]];

            ^--------------^


LockUp.unlock(uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#179-197) ignores return value by token.transfer(msg.sender,row.amount) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#191)
LockUp.massUnlock(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#201-227) ignores return value by token.transfer(_target,sum) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#225)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Reentrancy in LockUp.unlock(uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#179-197):
	External calls:
	- token.transfer(msg.sender,row.amount) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#191)
	State variables written after the call(s):
	- lockup[id].complete = true (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#193)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Reentrancy in LockUp.lockUp(address,address,uint256,uint256,string) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107-165):
	External calls:
	- balance = token.balanceOf(address(this)) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#117)
	State variables written after the call(s):
	- count = count + 1 (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#163)
	- lockup[count] = LockUpRecord(count,_token,_target,_amount,_unlock_time,description,false) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#131-147)
	- lockupCount[_token] = lockupCount[_token] + _amount (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#153)
	- lockupCount[_token] = _amount (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#157)
Reentrancy in LockUp.unlock(uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#179-197):
	External calls:
	- token.transfer(msg.sender,row.amount) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#191)
	State variables written after the call(s):
	- lockupCount[row.token] = lockupCount[row.token] - row.amount (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#195)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

LockUp.lockUp(address,address,uint256,uint256,string) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107-165) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(now <= _unlock_time) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#127)
LockUp.unlock(uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#179-197) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(row.unlock_time <= block.timestamp) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#185)
LockUp.massUnlock(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#201-227) uses timestamp for comparisons
	Dangerous comparisons:
	- row.owner == _target && row.unlock_time <= block.timestamp && row.complete == false && row.token == _token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#209)
LockUp.unlockAvailable(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#293-311) uses timestamp for comparisons
	Dangerous comparisons:
	- row.owner == _target && row.unlock_time <= now && row.complete == false && row.token == _token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#301)
LockUp.checkLockUp(uint256,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#337-341) uses timestamp for comparisons
	Dangerous comparisons:
	- lockup[id].owner == _target && lockup[id].unlock_time <= now && lockup[id].complete == false (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#339)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

LockUp.unlock(uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#179-197) compares to a boolean constant:
	-require(bool)(row.complete == false) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#187)
LockUp.massUnlock(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#201-227) compares to a boolean constant:
	-row.owner == _target && row.unlock_time <= block.timestamp && row.complete == false && row.token == _token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#209)
LockUp.unlockAvailable(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#293-311) compares to a boolean constant:
	-row.owner == _target && row.unlock_time <= now && row.complete == false && row.token == _token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#301)
LockUp.lockUpBalance(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#315-333) compares to a boolean constant:
	-row.owner == _target && row.complete == false && row.token == _token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#323)
LockUp.checkLockUp(uint256,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#337-341) compares to a boolean constant:
	-lockup[id].owner == _target && lockup[id].unlock_time <= now && lockup[id].complete == false (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#339)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Pragma version^0.4.23 (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#9) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter LockUp.lockUp(address,address,uint256,uint256,string)._token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107) is not in mixedCase
Parameter LockUp.lockUp(address,address,uint256,uint256,string)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107) is not in mixedCase
Parameter LockUp.lockUp(address,address,uint256,uint256,string)._amount (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107) is not in mixedCase
Parameter LockUp.lockUp(address,address,uint256,uint256,string)._unlock_time (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107) is not in mixedCase
Parameter LockUp.delegate(uint256,address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#169) is not in mixedCase
Parameter LockUp.massUnlock(uint256[],address,address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#201) is not in mixedCase
Parameter LockUp.massUnlock(uint256[],address,address)._token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#201) is not in mixedCase
Parameter LockUp.recordsAddress(address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#249) is not in mixedCase
Parameter LockUp.recordsAddressToken(address,address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#271) is not in mixedCase
Parameter LockUp.recordsAddressToken(address,address)._token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#271) is not in mixedCase
Parameter LockUp.unlockAvailable(uint256[],address,address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#293) is not in mixedCase
Parameter LockUp.unlockAvailable(uint256[],address,address)._token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#293) is not in mixedCase
Parameter LockUp.lockUpBalance(uint256[],address,address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#315) is not in mixedCase
Parameter LockUp.lockUpBalance(uint256[],address,address)._token (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#315) is not in mixedCase
Parameter LockUp.checkLockUp(uint256,address)._target (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#337) is not in mixedCase
Variable LockUp._owner (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#65) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

totalSupply() should be declared external:
	- ERC20Basic.totalSupply() (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#27)
balanceOf(address) should be declared external:
	- ERC20Basic.balanceOf(address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#29)
transfer(address,uint256) should be declared external:
	- ERC20Basic.transfer(address,uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#31)
lockUp(address,address,uint256,uint256,string) should be declared external:
	- LockUp.lockUp(address,address,uint256,uint256,string) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#107-165)
delegate(uint256,address) should be declared external:
	- LockUp.delegate(uint256,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#169-175)
unlock(uint256) should be declared external:
	- LockUp.unlock(uint256) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#179-197)
massUnlock(uint256[],address,address) should be declared external:
	- LockUp.massUnlock(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#201-227)
records() should be declared external:
	- LockUp.records() (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#231-245)
recordsAddress(address) should be declared external:
	- LockUp.recordsAddress(address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#249-267)
recordsAddressToken(address,address) should be declared external:
	- LockUp.recordsAddressToken(address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#271-289)
unlockAvailable(uint256[],address,address) should be declared external:
	- LockUp.unlockAvailable(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#293-311)
lockUpBalance(uint256[],address,address) should be declared external:
	- LockUp.lockUpBalance(uint256[],address,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#315-333)
checkLockUp(uint256,address) should be declared external:
	- LockUp.checkLockUp(uint256,address) (0x18508ffDF874F5217C880769bBF83f4196089c4.sol#337-341)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/home/cowie/VersionClassification_Polygon/4_UltimateResult/0x18508ffDF874F5217C880769bBF83f4196089c4.sol analyzed (2 contracts with 75 detectors), 46 result(s) found

