Compilation warnings/errors on /home/cowie/VersionClassification_BSC/4_UltimateResult/0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol:
/home/cowie/VersionClassification_BSC/4_UltimateResult/0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol:43:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {

  ^ (Relevant source part starts here and spans across multiple lines).
/home/cowie/VersionClassification_BSC/4_UltimateResult/0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol:113:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LavevelICO(address _tokenAddr) public {

  ^ (Relevant source part starts here and spans across multiple lines).
0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol:43:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() public {

  ^ (Relevant source part starts here and spans across multiple lines).
0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol:113:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function LavevelICO(address _tokenAddr) public {

  ^ (Relevant source part starts here and spans across multiple lines).


LavevelICO.buyTokens() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#319-337) ignores return value by token.transfer(msg.sender,tokens) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#331)
LavevelICO.destroy() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#365-379) ignores return value by token.transfer(owner,balance) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#373)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

LavevelICO.initialize() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#243-251) uses a dangerous strict equality:
	- require(bool)(tokensAvailable() == initialTokens) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#247)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Reentrancy in LavevelICO.initialize() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#243-251):
	External calls:
	- require(bool)(tokensAvailable() == initialTokens) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#247)
		- token.balanceOf(this) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#351)
	State variables written after the call(s):
	- initialized = true (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#249)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Ownable.transferOwnership(address) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#121-127) should emit an event for: 
	- owner = newOwner (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#125) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

LavevelICO.isActive() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#263-277) uses timestamp for comparisons
	Dangerous comparisons:
	- (initialized == true && now >= START && now <= START.add(DAYS * 86400) && goalReached() == false) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#265-275)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

LavevelICO.initialize() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#243-251) compares to a boolean constant:
	-require(bool)(initialized == false) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#245)
LavevelICO.isActive() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#263-277) compares to a boolean constant:
	-(initialized == true && now >= START && now <= START.add(DAYS * 86400) && goalReached() == false) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#265-275)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

Pragma version^0.4.21 (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#9) allows old versions
solc-0.4.26 is not recommended for deployment
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Constant LavevelICO.initialTokens (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#177) is not in UPPER_CASE_WITH_UNDERSCORES
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

transferOwnership(address) should be declared external:
	- Ownable.transferOwnership(address) (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#121-127)
initialize() should be declared external:
	- LavevelICO.initialize() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#243-251)
fallback() should be declared external:
	- LavevelICO.fallback() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#303-307)
destroy() should be declared external:
	- LavevelICO.destroy() (0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol#365-379)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/home/cowie/VersionClassification_BSC/4_UltimateResult/0xF0F228701cC6977d4998b0a4EB572823b0fd0f5.sol analyzed (4 contracts with 75 detectors), 15 result(s) found

